VER 2.8		2018/06/28
============================================================
Format Byte Description
------------------------------------------------------------
Byte2::bit7	Byte2::bit6	Represent	hex
0		0		Reply		0x00 ~ 0x3f
0		1		No Reply	0x40 ~ 0x7f	
1		0		Auto Send	0x80 ~ 0xBf
1		1		Error		0xc0 ~ 0xff
============================================================

Run code command (主要用來更新 TI 外部 SPI Flash)
--------------

* 0x06 - Write Enable (WREN)
	    ID	Req	Data_len   CMD_len	Flash CMD
	-> 03  	12 	00	    01 		06
	<- 03   12      00 	    01        	06

* 0x20- Sector Erase
	    ID	Req	Data_len   CMD_len	Flash CMD
	-> 03 	12 	00	    04 		20    addr0 addr1 addr2
	<- 03   12     	00	    04 		20   addr0 addr1 addr2

* 0x20	- Vendor Sector Erase
	/*共執行	1. WREN */
	/*		2. Read status 並確認 Write Enable  ok  */
	/*		3. Sector erase*/
	/*		4. Read status 並確認 Ready  */
	/*		5. 確認所要清除是否完成? 未完成則重複1 ~4的動作 */
	/*		6. 回傳 */

	    ID	Req	Sector_len   		CMD_len	Flash CMD
	-> 03 	12 	10(erase 4K *16)	04 		20 addr0 addr1 addr2
	<- 03   12     	10	      		04 		20 addr0 addr1 addr2



* 0xD8- Block Erase
	    ID	Req	Data_len   CMD_len	Flash CMD
	-> 03 	12 	00	    04 		D8 addr0 addr1 addr2
	<- 03   12     	00	    04 		D8 addr0 addr1 addr2

* 0x20- Custom Erase
	    ID	Req	Data_len   CMD_len	Flash CMD
	-> 03 	12 	n sectors   04 		20 addr0 addr1 addr2
	<- 03   12     	n sectors   04 		20 addr0 addr1 addr2

* 0x02 - Page Program
	    ID	Req	Data_len   CMD_len	Flash CMD
	-> 03 	12 	00	   (n+4)		02 addr0 addr1 addr2 data0 data1 ... data(n-1)
	<- 03 	12 	00	   (n+4) 	02 addr0 addr1 addr2 data0 data1 ... data(n-1)

* 0x02	- Vendor Page Program 
	/*共執行	1. WREN */
	/*		2. Read status 並確認 Write Enable  ok  */
	/*		3. Page Program */
	/*		4. Read status 並確認 Ready  */
	/*		5. Read flash data */
	/*		6. Read status 並確認 Ready  */
	/*		7. 回傳Flash data */

	-> 03 	12 	n	   (n+4)		02 addr0 addr1 addr2 data0 data1 ... data(n-1)
	<- 03 	12 	n	   (n+4) 	02 addr0 addr1 addr2 data0 data1 ... data(n-1)



* 0x01 - Write Status Register
	    ID	Req	Data_len   CMD_len	Flash CMD
	-> 03 	12 	00	   02 		01 status
	<- 03 	12 	00	   02 		01 status


* 0x04 - Write Disable (WRDI)
	    ID	Req	Data_len   CMD_len	Flash CMD
	-> 03 	12 	00	    01 		04
	<- 03 	12 	00	    01 		04

* 0x05 - Read Status
	    ID	Req	Data_len   CMD_len	Flash CMD
	-> 03 	11 	01 	    01		05
	<- 03 	11 	01  	    01		05	status

* 0x03 - Read
	    ID	Req	Data_len   CMD_len	Flash CMD
	-> 03 	11 	n 	    04 		03  addr0 addr1 addr2
	<- 03 	11 	n           04		03  data0 data1 ... data(n-1)

* 0x9F - Read RDID
	    ID	Req	Data_len   CMD_len	Flash CMD
	-> 03 	11 	03 	    01 		9F 
	<- 03 	11 	03          01		9F  C2 20 14

* 0x13 - Port IO control TI-65982 Power control
	    ID	Req	Port	Bit_num	Value
	-> 03 	13	90	08(bit3)	08 (TI-65982  power pin off)
	<- 03 	13 	90	08		08

	-> 03 	13 	90	08(bit3)		00 (TI-65982  power pin on)
	<- 03 	13 	90	08		00

	-> 03 	13 	90	10(bit4)		10 (TI-65982  reset pin off)
	<- 03 	13 	90	10		10

	-> 03 	13 	90	10(bit4)		00 (TI-65982  peset pin on)
	<- 03 	13 	90	10		00

	-> 03 	13 	A6	F0(bit4)		F0 (8UB2 mode pin pull hi)
	<- 03 	13 	A6	F0		F0

	-> 03 	13 	A0	F0(bit4 ~ 7)	F0 (8UB2 mode pin output hi)
	<- 03 	13 	A0	F0		x0


* 0x14 - Read TI-65982 code base FW version
	    ID	Req	Data_len   Addr	 Reg
	-> 03 	14 	05 	    71	 0F
	<- 03 	14 	05          71	 0F	04 00 03 01 00 /*  0310 (Version 01.30)
	    

* 0x14 - Read TI-65982 FW version
	    ID	Req	Data_len   Addr	 Reg
	-> 03 	14 	05 	    71	 06
	<- 03   14      05          71   06     08 16 02 15 02 82 59 06 00 /* FW ACK  (FW V2.16 + Tool V2.15 + TI65982)
	<- 03   14      05          71   06     08 15 02 00 00 82 59 06 00 /* FW ACK  (Tool V2.15 + TI65982)
	<- 03   14      05          71   06     08 00 00 00 00 00 00 00 00 /* FW ACK  (無版本號)

	    

* 0x14 - Read TI-65982 Reg
	    ID	Req	Data_len   Addr	 Reg		Data
	-> 03 	14 	n 	    71	 Reg_num	data0 ...... data(n-1)
	<- 03 	14 	n              71	 Reg_num	data0 ...... data(n-1)
	    

* 0x14 - Write TI-65982 Reg
	    ID	Req	Data_len   Addr	 Reg		Data
	-> 03 	14 	n+2 	    70	 Reg_num	data0 ...... data(n-1)
	<- 03 	14 	n+2          70	 Reg_num	data0 ...... data(n-1)
	    

* 0x15 - 內部區塊複製
	    ID	Req	來源長度   來源長度    來源位址		目標位址
	-> 03 	15 	n 	    n          addr_h    addr_l          addr_h    addr_l
    OK  <- 03 	15 	n           n          addr_h    addr_l          addr_h    addr_l 
    ERR	<- 03 	15 	FE          n          addr_h    addr_l          addr_h    addr_l 
	    
	/* copy addr 2000h ~ 11FFFh to 020000h ~ 02FFFFh */
	/* 來源address 0x002000 --> 00 20 */
	/* 目標address 0x020000 --> 02 00 */
	-> 03h 	15h 	10h 	    10h        00h       20h             02h       00h 
	<- 03h 	15h 	10h 	    10h        00h       20h             02h       00h /* 複製成功回ACK */   
	<- 03h 	15h 	FEh 	    10h        00h       20h             02h       00h /* 複製失敗回ACK */    
	    
* 0x16 - DS-UCC7 通知STM8S103K3 執行 Power reset (P1.5 = 0)
	    ID	Req	Port	Bit_num	Value				on_off delay(n*0.5s)	I2C delay(n*0.5s)
	-> 03 	16	90	20(bit5)	00 (pin off)		      n1			n2
	<- 03 	16 	90	20		00


* 0x16 - DS-UCB7 TI-65982 Power button control
	    ID	Req	Port	Bit_num	Value				on_off delay(n*0.5s)	I2C delay(n*0.5s)
	-> 03 	13	80	40(bit6)	00 (power pin off)      n1			n2
	<- 03 	13 	80	40		00



* 0x17 - 內部區塊比較
	    ID	Req	來源長度   來源長度    來源位址		目標位址
	-> 03 	17 	n 	    n          addr_h    addr_l          addr_h    addr_l
    OK  <- 03 	17 	n           n          addr_h    addr_l          addr_h    addr_l 
    ERR	<- 03 	17 	FE          n          addr_h    addr_l          addr_h    addr_l 
	    
	/* Verify addr 2000h ~ 11FFFh to 020000h ~ 02FFFFh */
	/* 來源address 0x002000 --> 00 20 */
	/* 目標address 0x020000 --> 02 00 */
	-> 03h 	17h 	10h 	    10h        00h       20h             02h       00h 
	<- 03h 	17h 	10h 	    10h        00h       20h             02h       00h /* Verify成功回ACK */   
	<- 03h 	17h 	FEh 	    10h        00h       20h             02h       00h /* Verify失敗回ACK */    
	    
* 0x0F - Soft reset 
	Enter DFU
	-> 03 0F 40 55 AA

* 0x00 - 驗證傳輸是否正確
	    ID	Req	Format	CMD
	-> 03 	00 	00	data0 data1 ... data61
	<- 03   00	00	data0 data1 ... data61


* 0x01 - 讀取 FW 相關訊息
	    ID		Req	Format
	-> 03 		01 	00
	<- 03   		01  	00	ProductType-L  Prod-H 	      FW.ver-l  FW.ver-h  Boot.ver-l  
	    Boot.ver-h     FF   	FF	FF  		FW.格式    FF	         客戶.ID-l 客戶.ID-h

範例1 :  更新 TI 外部 SPI Flash 
	
	/*  BIN檔內 Addr 0x0000 ~ 0x0003 的值加上 Addr 0x0FFC ~ 0x0FFF 的值為 Run code config point */
	/*  數值為低至高目前為 00 20 00 00 與 00 00 00 00 */
	/* 故 Run code config point = 0x2000 + 0x00 = 0x2000 */
	/* Addr 0x2008 ~ 0x200B 的值代表 Config len 目前為 00 10 00 00 */
	/* Addr 0x200C ~ 0x200F 的值代表 Run code len 目前為 84 E1 00 00 */
	/* config point + config len + run code len = 0x2000 + 0x1000 -1 + 0xE184 = 0x011184 */
	/* 故知 Run code 要更新的範圍為 0x002000 ~ 0x011183 */

	/*  BIN檔內 Addr 0x1000 ~ 0x1003 的值加上 Addr 0x1FFC ~ 0x1FFF 的值為 Back-up code config point */
	/*  數值為低至高目前為 00 00 02 00 與 00 00 00 00 */
	/* 故 Back-up code config point = 0x020000 + 0x00 = 0x020000 */
	/* Addr 0x020008 ~ 0x02000B 的值代表 Config len 目前為 00 10 00 00 */
	/* Addr 0x02000C ~ 0x02000F 的值代表 Run code len 目前為 84 E1 00 00 */
	/* config point + config len + back-up code len = 0x020000 + 0x1000 + 0xE184 = 0x02F184 */
	/* 故知 Back-up code 要更新的範圍為 0x020000 ~ 0x02F183 */


	-> 03 	13 	A6	F0(bit4)		00 (8UB2 mode pin open drain)
	<- 03 	13 	A6	F0		00


	-> 03 	13 	F3	F0(bit4)		F0 (8UB2 mode pin input digital)
	<- 03 	13 	F3	F0		F0

	-> 03 	13 	A0	F0(bit4 ~ 7)	F0 (8UB2 mode pin output hi)
	<- 03 	13 	A0	F0		x0
	/* 如果讀回值正確例如UCA5=F0 / UCA3=40 / UCB7=10 才進行下面正常更新程序 */

	-> 03 11  03 01 9F				/* 0x9F - Read RDID */
	<- 03 11  03 01 9F C2 20 14			/* FW 回 RDID */

	/* 如果讀回值不正確例如 0xFF or 0x00 才需下 Ti-65982 power off command */
	-> 03 13  90 08 08				/* 0x13 - TI-65982 Power off */
	<- 03 13  90 08 08				/* FW ACK */
	delay 1 sec					/* 等待 TI power off */
	
	-> 03 14 05 71 0F				/* 0x14 - Read TI-65982 FW version */
	<- 03 14 05 71 0F 04 00 03 01 00		/* FW version 01.30 */

	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */

	-> 03 12 00 01 06				/* 0x06 - Write Enable (WREN)*/
	<- 03 12 00 01 06				/* FW 回 ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */
	-> 03 12 00 04 20 00 00 00			/* 0x20 Erase addr 0x000000 */
	<- 03 12 00 04 20 00 00 00			/* FW ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */

	-> 03 12 00 01 06				/* 0x06 - Write Enable (WREN)*/
	<- 03 12 00 01 06				/* FW 回 ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */
	-> 03 12 00 04 20 00 20 00			/* 0x20 Erase addr 0x002000 */
	<- 03 12 00 04 20 00 20 00			/* FW ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */
		.
		.
		.
	-> 03 12 00 01 06				/* 0x06 - Write Enable (WREN)*/
	<- 03 12 00 01 06				/* FW 回 ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */
	-> 03 12 00 04 20 01 10 00			/* 0x20 Erase addr 0x011000 */
	<- 03 12 00 04 20 01 10 00			/* FW ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */


	-> 03 12 20 24 02 00 00 00 data0 ... data31	/* 0x02 Program addr0x000000 (32byte) */
	<- 03 12 20 24 02 00 00 00 data0 ... data31	/* FW回傳Flash addr0x000000 (32byte) */					.
			.
			.

	-> 03 12 20 24 02 00 0F E0 data0 ... data31	/* 0x02 Program addr0x000FE0 (32byte) */
	<- 03 12 20 24 02 00 0F E0 data0 ... data31	/* FW回傳Flash addr0x000FE0 (32byte) */


	-> 03 12 20 24 02 00 20 00 data0 ... data31	/* 0x02 Program addr0x002000 (32byte) */
	<- 03 12 20 24 02 00 20 00 data0 ... data31	/* FW回傳Flash addr0x002000 (32byte) */
			.
			.
			.
	-> 03 12 20 24 02 01 11 E0 data0 ... data31	/* 0x02 Program addr0x0111E0 (32byte) */
	<- 03 12 20 24 02 01 11 E0 data0 ... data31	/* FW回傳Flash addr0x0111E0 (32byte) */


	-> 03 12 00 01 06				/* 0x06 - Write Enable (WREN)*/
	<- 03 12 00 01 06				/* FW 回 ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */
	-> 03 12 00 04 20 00 10 00			/* 0xD8 Erase addr 0x001000 */
	<- 03 12 00 04 20 00 10 00			/* FW ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */

	-> 03 12 00 01 06				/* 0x06 - Write Enable (WREN)*/
	<- 03 12 00 01 06				/* FW 回 ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */
	-> 03 12 00 04 D8 02 00 00			/* 0xD8 Erase addr 0x020000 */
	<- 03 12 00 04 D8 02 00 00			/* FW ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */


	-> 03 12 00 01 06				/* 0x06 - Write Enable (WREN)*/
	<- 03 12 00 01 06				/* FW 回 ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */
	-> 03 12 00 04 D8 02 00 00			/* 0xD8 Erase addr 0x020000 */
	<- 03 12 00 04 D8 02 00 00			/* FW ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */

	-> 03 12 20 24 02 00 10 00 data0 ... data31	/* 0x02 Program addr0x001000 (32byte) */
	<- 03 12 20 24 02 00 10 00 data0 ... data31	/* FW回傳Flash addr0x001000 (32byte) */					.
			.
			.

	-> 03 12 20 24 02 00 1F E0 data0 ... data31	/* 0x02 Program addr0x001FE0 (32byte) */
	<- 03 12 20 24 02 00 1F E0 data0 ... data31	/* FW回傳Flash addr0x001FE0 (32byte) */


	-> 03 12 20 24 02 02 00 00 data0 ... data31	/* 0x02 Program addr0x020000 (32byte) */
	<- 03 12 20 24 02 02 00 00 data0 ... data31	/* FW回傳Flash addr0x020000 (32byte) */
			.
			.
			.
	-> 03 12 20 24 02 02 FF E0 data0 ... data31	/* 0x02 Program addr0x02FFE0 (32byte) */
	<- 03 12 20 24 02 02 FF E0 data0 ... data31	/* FW回傳Flash addr0x02FFE0 (32byte) */



範例2 :  更新 TI 外部 SPI Flash addr 0x0000 ~ addr 0x0FFF
	
	-> 03 	13 	A6	F0(bit4)		00 (8UB2 mode pin open drain)
	<- 03 	13 	A6	F0		00


	-> 03 	13 	F3	F0(bit4)		F0 (8UB2 mode pin input digital)
	<- 03 	13 	F3	F0		F0

	-> 03 	13 	A0	F0(bit4 ~ 7)	F0 (8UB2 mode pin output hi)
	<- 03 	13 	A0	F0		x0
	/* 如果讀回值正確例如UCA5=F0 / UCA3=40  才進行下面正常更新程序 */


	-> 03 11  03 01 9F				/* 0x9F - Read RDID */
	<- 03 11  03 01 9F C2 20 14			/* FW 回 RDID */

	/* 如果讀回值不正確例如 0xFF or 0x00 才需下 Ti-65982 power off command */
	-> 03 13  90 08 08				/* 0x13 - TI-65982 Power off */
	<- 03 13  90 08 08				/* FW ACK */
	delay 1 sec					/* 等待 TI power off */

	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */
	-> 03 12 00 01 06				/* 0x06 - Write Enable (WREN)*/
	<- 03 12 00 01 06				/* FW 回 ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */
	-> 03 12 00 04 20 00 00 00			/* 0x20 Erase addr0 ~ addr 0x0FFF */
	<- 03 12 00 04 20 00 00 00			/* FW ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */
	-> 03 12 00 24 02 00 00 00 data0 ... data31	/* 0x02 Program addr0   ~ addr31 */
	<- 03 12 00 24 02 00 00 00 data0 ... data31	/* FW ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */
	-> 03 12 00 24 02 00 00 20 data0 ... data31	/* 0x02 Program addr32 ~ addr63 */
	<- 03 12 00 24 02 00 00 20 data0 ... data31	/* FW ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */
	-->  .....						/* 0x02 Program addr */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */
	-> 03 12 00 24 02 00 0F C0 data0 ... data31	/* 0x02 Program addr0FC0h ~ addr */
	<- 03 12 00 24 02 00 0F C0 data0 ... data31	/* FW ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */
	-> 03 12 00 01 04				/* 0x04 - Write Disable (WRDI)*/
	<- 03 12 00 01 04				/* FW ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */
	/* 如先前有下 Ti-65982 power off 才需下 Ti-65982 power on command */
	-> 03 13 00 90 08 00				/* 0x13 - TI-65982 Power on */
	<- 03 13 00 90 08 00				/* FW ACK */



範例3 :  更新 TI 外部 SPI Flash Run code (0x000000 ~ 0x011FFF) 後直接Copy (0x002000 ~ 0x011FFF) 至 Back up code (0x020000 ~ 0x02FFFF)
	
	-> 03 	13 	A6	F0(bit4)		00 (8UB2 mode pin open drain)
	<- 03 	13 	A6	F0		00


	-> 03 	13 	F3	F0(bit4)		F0 (8UB2 mode pin input digital)
	<- 03 	13 	F3	F0		F0

	-> 03 	13 	A0	F0(bit4 ~ 7)	F0 (8UB2 mode pin output hi)
	<- 03 	13 	A0	F0		x0
	/* 如果讀回值正確例如UCA5=F0 / UCA3=40  才進行下面正常更新程序 */


	-> 03 11  03 01 9F				/* 0x9F - Read RDID */
	<- 03 11  03 01 9F C2 20 14			/* FW 回 RDID */

	/* 如果讀回值不正確例如 0xFF or 0x00 才需下 Ti-65982 power off command */
	-> 03 13  90 08 08				/* 0x13 - TI-65982 Power off */
	<- 03 13  90 08 08				/* FW ACK */
	delay 1 sec					/* 等待 TI power off */

	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status			/* FW 回 status */
	-> 03 12 00 01 06				/* 0x06 - Write Enable (WREN)*/
	<- 03 12 00 01 06				/* FW 回 ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status			/* FW 回 status */
	-> 03 12 12 04 20 00 00 00			/* 0x20 Erase addr0x000000 ~ addr 0x011FFF */
	<- 03 12 12 04 20 00 00 00			/* FW ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status			/* FW 回 status */
	-> 03 12 00 24 02 00 00 00 data0 ... data31	/* 0x02 Program addr0x000000   ~ addr0x000031 */
	<- 03 12 00 24 02 00 00 00 data0 ... data31	/* FW ACK */
		.
		.
		.
	-> 03 12 00 24 02 01 1F C0 data0 ... data31	/* 0x02 Program addr0x011FC0h ~ addr0x011FFF */
	<- 03 12 00 24 02 01 1F C0 data0 ... data31	/* FW ACK */

	-> 03 15 10 10 00 20 02 00			/* 將 0x002000 copy to 0x020000 */
							/* copy addr 2000h ~ 11FFFh to 020000h ~ 02FFFFh */
							/* 來源address 0x002000 --> 00 20 */
							/* 目標address 0x020000 --> 02 00 */
	<- 03 15 10 10 00 20 02 00			/* 複製成功回ACK */

	-> 03 12 00 01 04				/* 0x04 - Write Disable (WRDI)*/
	<- 03 12 00 01 04				/* FW ACK */
	-> 03 11 01 01 05				/* 0x05 - Read Status */
	<- 03 11 01 01 05 status				/* FW 回 status */
	/* 如先前有下 Ti-65982 power off 才需下 Ti-65982 power on command */
	-> 03 13 00 90 08 00				/* 0x13 - TI-65982 Power on */
	<- 03 13 00 90 08 00				/* FW ACK */

範例4 :  更新 TI 外部 SPI Flash Run code (0x002000 ~ 0x011FFF) 後直接Copy至 Back up code (0x020000 ~ 0x02FFFF)
	
	-> 03 	13 	A6	F0(bit4)		00 (8UB2 mode pin open drain)
	<- 03 	13 	A6	F0		00


	-> 03 	13 	F3	F0(bit4)		F0 (8UB2 mode pin input digital)
	<- 03 	13 	F3	F0		F0

	-> 03 	13 	A0	F0(bit4 ~ 7)	F0 (8UB2 mode pin output hi)
	<- 03 	13 	A0	F0		x0
	/* 如果讀回值正確例如UCA5=F0 / UCA3=40  才進行下面正常更新程序 */


	-> 03 11  03 01 9F				/* 0x9F - Read RDID */
	<- 03 11  03 01 9F C2 20 14			/* FW 回 RDID */

	/* 如果讀回值不正確例如 0xFF or 0x00 才需下 Ti-65982 power off command */
	-> 03 13  90 08 08				/* 0x13 - TI-65982 Power off */
	<- 03 13  90 08 08				/* FW ACK */
	delay 1 sec					/* 等待 TI power off */


	-> 03 12 10 04 20 00 20 00			/* 0x20 Erase addr0x002000 ~ addr 0x011FFF */
	<- 03 12 10 04 20 00 20 00			/* FW ACK */

	-> 03 12 38 3C 02 00 20 00 data0 ... data55	/* 0x02 Program addr0x002000   ~ addr0x002055 */
	<- 03 12 38 3C 02 00 20 00 data0 ... data55	/* FW ACK */
		.
		.
		.
	-> 03 12 36 3A 02 01 1F C2 data0 ... data53	/* 0x02 Program addr0x011FC0h ~ addr0x011FFF */
	<- 03 12 36 3A 02 01 1F C2 data0 ... data53	/* FW ACK */

	/* (PS. 8UB2 FW Version 0.71以前,請進行範例5) */

	-> 03 15 10 10 00 20 02 00			/* 將 0x002000 copy to 0x020000 */
	<- 03 15 10 10 00 20 02 00			/* Copy ok */

	-> 03 12 00 01 04				/* 0x04 - Write Disable (WRDI)*/
	<- 03 12 00 01 04				/* FW ACK */

	/* 如先前有下 Ti-65982 power off 才需下 Ti-65982 power on command */
	-> 03 13 00 90 08 00				/* 0x13 - TI-65982 Power on */
	<- 03 13 00 90 08 00				/* FW ACK */




範例5 :   更新 TI 外部 SPI Flash Back up code (0x020000 ~ 0x02FFFF) 8UB2 FW Version 0.71以前後續程序


	-> 03 12 38 3C 02 02 00 00 data0 ... data55	/* 0x02 Program addr0x020000   ~ addr0x020055 */
	<- 03 12 38 3C 02 02 00 00 data0 ... data55	/* FW ACK */
		.
		.
		.
	-> 03 12 36 3A 02 02 FF C2 data0 ... data53	/* 0x02 Program addr0x02FFC2h ~ addr0x02FFFF */
	<- 03 12 36 3A 02 02 FF C2 data0 ... data53	/* FW ACK */


	-> 03 12 00 01 04				/* 0x04 - Write Disable (WRDI)*/
	<- 03 12 00 01 04				/* FW ACK */

	/* 如先前有下 Ti-65982 power off 才需下 Ti-65982 power on command */
	-> 03 13 00 90 08 00				/* 0x13 - TI-65982 Power on */
	<- 03 13 00 90 08 00				/* FW ACK */




範例6 :   TI FW Verify tools
	
	-> 03 13 A6 F0 00 				/* (8UB2 mode pin open drain) */
	<- 03 13 A6 F0 00

	-> 03 13 F3 F0 F0 				/* (8UB2 mode pin input digital) */
	<- 03 13 F3 F0 F0

	-> 03 13 A0 F0 F0 				/* (8UB2 mode pin output hi) */
	<- 03 13 A0 F0 x0

	/* 如果讀回值正確例如UCA5=F0 / UCA3=40  才進行下面比較程序 */

	-> 03 11  03 01 9F				/* 0x9F - Read RDID */
	<- 03 11  03 01 9F C2 20 14			/* FW 回 RDID */

	/* 如果讀回值不正確例如 0xFF or 0x00 才需下 Ti-65982 power off command */
	-> 03 13  90 08 08				/* 0x13 - TI-65982 Power off */
	<- 03 13  90 08 08				/* FW ACK */
	delay 1 sec					/* 等待 TI power off */

	-> 03 14 05 71 06 				/* Read TI FW version */
	<- 03 14 05 71 06 08 16 02 15 02 82 59 06 00	/* FW ACK  (FW V2.16 + Tool V2.15 + TI65982)
	<- 03 14 05 71 06 08 00 00 00 00 00 00 00 00	/* FW ACK  (無版本號,進行範例7)

	/* 如果讀回Version值正確才進行下面比較程序 */
	/* (PS. 8UB2 FW Version 0.71以前,請進行範例7) */

	-> 03 17 10 10 00 20 02 00			/* 比較 ADDR 0x002000 是否等於 0x020000 */ 
	<- 03 17 10 10 00 20 02 00			/* FW ACK 比對結果完全相同 */
	<- 03 17 FE 10 00 20 02 00			/* FW ACK 比對結果失敗,進行 範例7 */

	-> 03 15 10 10 02 00 00 20			/* 將 0x020000 copy to 0x002000 */
	<- 03 15 10 10 02 00 00 20			/* Copy ok */

	-> 03 12 00 01 04				/* 0x04 - Write Disable (WRDI)*/
	<- 03 12 00 01 04				/* FW ACK */


	/* 如先前有下 Ti-65982 power off 才需下 Ti-65982 power on command */
	-> 03 13 00 90 08 00				/* 0x13 - TI-65982 Power on */
	<- 03 13 00 90 08 00				/* FW ACK */



範例7 :   TI FW Verify tools 判讀失敗後續程序
	

	-> 03 12 12 04 20 00 00 00			/* 0x20 Erase addr0x000000 ~ addr 0x011FFF */
	<- 03 12 12 04 20 00 00 00			/* FW ACK */

	-> 03 11 38 04 03 02 00 00 data0 ... data55	/* 0x03   Read addr0x020000 (56byte) */
	<- 03 11 38 04 03 02 00 00 data0 ... data55	/* FW回傳Flash addr0x020000 (56byte) */					.
			.
			.

	-> 03 11 36 04 03 02 FF C2 data0 ... data53	/* 0x02    Read addr0x02FFC2 (54byte) */
	<- 03 11 36 04 03 02 FF C2 data0 ... data53	/* FW回傳 Flash addr0x02FFC2 (54byte) */


	-> 03 12 38 3C 02 00 20 00 data0 ... data55	/* 0x02 Program addr0x002000 (56byte) */
	<- 03 12 38 3C 02 00 20 00 data0 ... data55	/* FW回傳 Flash addr0x002000 (56byte) */					.
			.
			.

	-> 03 12 36 3A 02 01 1F C2 data0 ... data53	/* 0x02 Program addr0x011FC2 (54byte) */
	<- 03 12 36 3A 02 01 1F C2 data0 ... data53	/* FW回傳 Flash addr0x011FC2 (54byte) */


	-> 03 12 00 01 04				/* 0x04 - Write Disable (WRDI)*/
	<- 03 12 00 01 04				/* FW ACK */


	/* 如先前有下 Ti-65982 power off 才需下 Ti-65982 power on command */
	-> 03 13 00 90 08 00				/* 0x13 - TI-65982 Power on */
	<- 03 13 00 90 08 00				/* FW ACK */




HID bootloader Command

* 0x03 - 驗證傳輸是否正確
	Set_report( 21 09 03 02 00 00 40 00 )
	-> 03 03 00 data0 data1 ... data61
	<- 03 03 00 data0 data1 ... data61

* 0x04 - 燒錄資料到指定 Addrress
	Set_report( 21 09 03 02 00 00 40 00 )
	-> 03 04 00 addr_l addr_h n data0... data(n-1)

* 0x05 - 讀取指定 UID & Ver 資料
	Set_report( 21 09 03 02 00 00 40 00 )
	-> 03 05 00 00 20 xx ... xx
	<- Fash_addr_l	Fash_addr_h  Fash_start_l  Fash_start_h
	    Fash_end_l    Fash_end_h   Fash_uid_l    Fash_uid_h
	    0x00		0x00	       Type_l         Type_h
	    Run_ver_l	Run_ver_h    DFU_ver_l   DFU_ver_h
	    UID_byte0    ..... 

* 0x06 - 讀取指定 Addrress 資料
	Set_report( 21 09 03 02 00 00 40 00 )
	-> 03 06 00 addr_l addr_h n xx ... xx
	<- 03 06 00 data0 ... data(n-1)

* 0x0E - Erase 指定 Address block
	Set_report( 21 09 03 02 00 00 40 00 )
	-> 03 0E 00 addr_l addr_h xx


* 0x0F - Soft reset 
	Enter DFU
	Set_report( 21 09 03 02 00 00 40 00 )
	-> 03 0F 40 55 AA

	Enter run code
	Set_report( 21 09 03 02 00 00 40 00 )
	-> 03 0F 40 55 66


範例1 :  DFU 解鎖 
	-> 01 05 00 00 20 xx ... xx			/* 讀 UID & VER */
	<- 00 20 00 00 24 FF 7F 00 20		/* FW 回傳 Addr */
	    00 00 00 00 10  00 10 00 		/* FW 回傳 VER */
	    A6 67 03 00 00 00 00 00		/* FW 回傳 8 byte UID */
	    45 62 16 47 00 00 00 00		/* FW 回傳 8 byte UID*/
	    xx xx xx xx xx xx xx xx		/* 無效 */
	-> 01 04 00 00 20 20			/* 燒 VER & UID 20 BYTE */
	    00 20 00 24 FF 7F 00 20		/* FW 先前回傳的 Addr */
	    00 00 00 00 10  00 10 00 		/* FW 先前回傳的 VER */
	    A6 67 03 00 00 00 00 00		/* FW 先前回傳的 8 byte UID */
	    45 62 16 47 00 00 00 00		/* FW 先前回傳的 8 byte UID */
	-> 01 06 00 00 20 20 xx			/* 讀取 Ver & UID flash位置20BYTE */
	<- 00 20 00 00 24 FF 7F 00 20		/* FW 回傳 Addr */
	    00 00 00 00 10  00 10 00 		/* FW 回傳 VER */
	    A6 67 03 00 00 00 00 00		/* FW 回傳 8 byte UID */
	    45 62 16 47 00 00 00 00		/* FW 回傳 8 byte UID*/


範例2 :  離開 Run code 進 DFU 更新 run code
	--> 01 0F 55 AA				/* 0x0F Enter DFU mode */
	Wait 					/* 等待進 DFU */
	Delay 1 sec				/* 緩衝 */
	-> 01 0E 00 00 00 xx			/* Erase run code flash_start_addr */	
	-> 01 0E 00 00 02 xx			/* Erase run code next block */
	-> 01 0E 00 00 ...				/* Erase run code block */
	-> 01 0E 00 00 7C xx			/* Erase run code flash_end_addr */
	-> 01 04 00 00 24 20 data0... data31		/* Program run code flash_start_addr */
	-> 01 04 00 20 24 20 data0... data31		/* Program addr 0x2420 ~ 0x243F */
	-> 01 04 00 ......				/* Program .....*/
	-> 01 04 00 E0 7F 20 data0... data31		/* Program run code flash_end_addr */
	-> 01 06 00 00 24 20 data0... data31		/* Read run code flash_start_addr */
	-> 01 06 00 20 24 20 data0... data31		/* Program addr 0x2420 ~ 0x243F */
	-> 01 06 00 ......				/* Program .....*/
	-> 01 06 00 E0 7F 20 data0... data31		/* Program run code flash_end_addr */
	--> 01 0F 00 55 66				/* 0x0F Enter run code mode */

	








